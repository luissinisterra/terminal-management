/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import controladores.ControladorVistaGestionViajes;
import modelos.*;
import util.interfaces.ILista;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 *
 * @author luis
 */
public class VistaGestionViajes extends javax.swing.JFrame {

    ControladorVistaGestionViajes controladorVistaGestionViajes;
    Usuario usuarioLogeado;
    Caseta caseta;
    int fila;
    int columna;

    /**
     * Creates new form VistaGestionViajes
     */
    public VistaGestionViajes(Caseta caseta, Usuario usuarioLogeado, int fila, int columna) {
        initComponents();
        setLocationRelativeTo(this);
        this.controladorVistaGestionViajes = new ControladorVistaGestionViajes();
        this.caseta = caseta;
        this.usuarioLogeado = usuarioLogeado;
        this.fila = fila;
        this.columna = columna;
        this.limpiarCampos();
        this.llenarTabla();
        this.alistarBox();
    }

    public void llenarTabla(){
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"Id viaje", "Origen", "Destino", "Salida", "Llegada", "Bus", "Valor unitario"});

        // Asegurarse de que la lista no sea null
        ILista<Viaje> viajes = this.caseta.getEmpresa().getViajes();
        if (viajes != null) {
            for (int i = 0; i < viajes.size(); i++) {
                model.addRow(new Object[]{
                        viajes.get(i).getIdViaje(),
                        viajes.get(i).getOrigen(),
                        viajes.get(i).getDestino(),
                        viajes.get(i).getFechaHoraSalida(),
                        viajes.get(i).getFechaHoraLlegada(),
                        viajes.get(i).getBus().getPlaca(),
                        viajes.get(i).getValorUnitario()
                });
            }
        }
        tablaViajes.setModel(model);
    }

    private void limpiarCampos(){
        txtIdViaje.setText("");
        txtOrigen.setText("Armenia");
        txtOrigen.setEnabled(false);
        txtDestino.setText("");
        txtFechaHoraSalida.setText("");
        txtFechaHoraLlegada.setText("");
        txtValorUnitario.setText("");
    }

    public void alistarBox(){
        DefaultComboBoxModel<String> modeloBus = new DefaultComboBoxModel<>();
        for (int i = 0; i < this.caseta.getEmpresa().getBuses().size(); i++) {
            modeloBus.addElement(this.caseta.getEmpresa().getBuses().get(i).getPlaca());
        }
        cbxBus.setModel(modeloBus);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        panelCrudGestionViajes = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtOrigen = new javax.swing.JTextField();
        txtDestino = new javax.swing.JTextField();
        txtFechaHoraSalida = new javax.swing.JTextField();
        txtFechaHoraLlegada = new javax.swing.JTextField();
        cbxBus = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtIdViaje = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtValorUnitario = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        panelTablaGestionViajes = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaViajes = new javax.swing.JTable();
        btnRegresar = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Origen:");

        jLabel3.setText("Destino:");

        jLabel4.setText("Fecha/Hora de salida:");

        jLabel5.setText("Fecha/Hora de llegada:");

        jLabel6.setText("Bus:");

        cbxBus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Id del viaje:");

        jLabel8.setText("Valor unitario:");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jButton5.setText("Buscar");

        javax.swing.GroupLayout panelCrudGestionViajesLayout = new javax.swing.GroupLayout(panelCrudGestionViajes);
        panelCrudGestionViajes.setLayout(panelCrudGestionViajesLayout);
        panelCrudGestionViajesLayout.setHorizontalGroup(
            panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCrudGestionViajesLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCrudGestionViajesLayout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCrudGestionViajesLayout.createSequentialGroup()
                        .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGap(42, 42, 42)
                        .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaHoraSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaHoraLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxBus, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        panelCrudGestionViajesLayout.setVerticalGroup(
            panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCrudGestionViajesLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtIdViaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFechaHoraSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtFechaHoraLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbxBus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addGroup(panelCrudGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEliminar)
                    .addComponent(btnEditar)
                    .addComponent(jButton5))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        tablaViajes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaViajes);

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTablaGestionViajesLayout = new javax.swing.GroupLayout(panelTablaGestionViajes);
        panelTablaGestionViajes.setLayout(panelTablaGestionViajesLayout);
        panelTablaGestionViajesLayout.setHorizontalGroup(
            panelTablaGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTablaGestionViajesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegresar)
                .addContainerGap())
            .addGroup(panelTablaGestionViajesLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 891, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelTablaGestionViajesLayout.setVerticalGroup(
            panelTablaGestionViajesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTablaGestionViajesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnRegresar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCrudGestionViajes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(panelTablaGestionViajes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelCrudGestionViajes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTablaGestionViajes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        VistaAdminFlota vaf = new VistaAdminFlota((AdministradorFlota) this.usuarioLogeado, this.caseta, this.fila, this.columna);
        vaf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try {
            if (txtIdViaje.getText().trim().isEmpty() ||
                    txtOrigen.getText().trim().isEmpty() ||
                    txtDestino.getText().trim().isEmpty() ||
                    txtFechaHoraSalida.getText().trim().isEmpty() ||
                    txtFechaHoraLlegada.getText().trim().isEmpty() ||
                    cbxBus.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Todos los campos deben ser llenados.");
                return;
            }

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");

            LocalDateTime fechaHoraSalida = LocalDateTime.parse(txtFechaHoraSalida.getText().trim(), formatter);
            LocalDateTime fechaHoraLlegada = LocalDateTime.parse(txtFechaHoraLlegada.getText().trim(), formatter);

            if(fechaHoraSalida.isAfter(fechaHoraLlegada)) {
                JOptionPane.showMessageDialog(null, "La fecha de salida debe ser antes que la de llegada.");
                return;
            }

            if(fechaHoraSalida.equals(fechaHoraLlegada)){
                JOptionPane.showMessageDialog(null, "La fecha de salida y llegada no pueden ser iguales.");
                return;
            }

            if(fechaHoraSalida.isBefore(LocalDateTime.now())){
                JOptionPane.showMessageDialog(null, "La fecha de salida no puede ser pasada.");
                return;
            }

            String busPlaca = String.valueOf(cbxBus.getSelectedItem()).trim();
            Bus bus = this.controladorVistaGestionViajes.obtenerBusPorId(busPlaca, this.caseta);
            int valorUnitario = Integer.parseInt(txtValorUnitario.getText());

            this.controladorVistaGestionViajes.agregarViaje(txtIdViaje.getText().trim(), txtOrigen.getText().trim(), txtDestino.getText().trim(), fechaHoraSalida, fechaHoraLlegada, bus, valorUnitario);
            this.caseta.getEmpresa().getViajes().add(new Viaje(txtIdViaje.getText().trim(), txtOrigen.getText().trim(), txtDestino.getText().trim(), fechaHoraSalida, fechaHoraLlegada, bus, valorUnitario));
            this.controladorVistaGestionViajes.asignarCaseta(this.fila, this. columna, this.caseta);

            this.limpiarCampos();
            this.llenarTabla();
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(null, "Formato de fecha inválido. Use el formato 'yyyy-MM-dd HH:mm'.");
        }catch (RuntimeException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            if (txtIdViaje.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "El campo del Id debe estar lleno.");
                return;
            }
            String idViaje = txtIdViaje.getText().trim();
            this.controladorVistaGestionViajes.eliminarViaje(idViaje);

            for(int i = 0; i < this.caseta.getEmpresa().getViajes().size(); i++){
                if(this.caseta.getEmpresa().getViajes().get(i).getIdViaje().equals(idViaje)){
                    this.caseta.getEmpresa().getBuses().get(i).setDisponibilidad(true);
                    this.caseta.getEmpresa().getViajes().remove(i);
                }
            }

            this.controladorVistaGestionViajes.asignarCaseta(this.fila, this. columna, this.caseta);
            this.limpiarCampos();
            this.llenarTabla();
        } catch (RuntimeException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try {
            if (txtIdViaje.getText().trim().isEmpty() ||
                    txtOrigen.getText().trim().isEmpty() ||
                    txtDestino.getText().trim().isEmpty() ||
                    txtFechaHoraSalida.getText().trim().isEmpty() ||
                    txtFechaHoraLlegada.getText().trim().isEmpty() ||
                    cbxBus.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Todos los campos deben ser llenados.");
                return;
            }

            String idViaje = txtIdViaje.getText().trim();
            String nuevoDestino = txtDestino.getText().trim();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
            LocalDateTime nuevaFechaHoraLlegada = LocalDateTime.parse(txtFechaHoraLlegada.getText().trim(), formatter);
            int valorUnitario = Integer.parseInt(txtValorUnitario.getText());
            this.controladorVistaGestionViajes.actualizarViaje(idViaje, nuevoDestino, nuevaFechaHoraLlegada, valorUnitario);

            for(int i = 0; i < this.caseta.getEmpresa().getViajes().size(); i++){
                if(this.caseta.getEmpresa().getViajes().get(i).getIdViaje().equals(idViaje)){
                    this.caseta.getEmpresa().getViajes().get(i).setDestino(nuevoDestino);
                    this.caseta.getEmpresa().getViajes().get(i).setFechaHoraLlegada(nuevaFechaHoraLlegada);
                    this.caseta.getEmpresa().getViajes().get(i).setValorUnitario(valorUnitario);
                }
            }

            this.controladorVistaGestionViajes.asignarCaseta(this.fila, this. columna, this.caseta);
            this.limpiarCampos();
            this.llenarTabla();
        } catch (RuntimeException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaGestionViajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaGestionViajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaGestionViajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaGestionViajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaGestionViajes(null, null, 0, 0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cbxBus;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelCrudGestionViajes;
    private javax.swing.JPanel panelTablaGestionViajes;
    private javax.swing.JTable tablaViajes;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtFechaHoraLlegada;
    private javax.swing.JTextField txtFechaHoraSalida;
    private javax.swing.JTextField txtIdViaje;
    private javax.swing.JTextField txtOrigen;
    private javax.swing.JTextField txtValorUnitario;
    // End of variables declaration//GEN-END:variables
}
